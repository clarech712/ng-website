"use strict";(self.webpackChunkng_website=self.webpackChunkng_website||[]).push([[926],{3741:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=o(5893),n=o(1151);const s={sidebar_position:4},r="Examples of Objects & Actions",a={id:"environment/objectsactions",title:"Examples of Objects & Actions",description:"The implementations of the objects and actions for the base environment are in the NovelGridWorldsV2 repository, which you will have installed together with its wrapper repository NovelGym. In this part of the tutorial, we explore how the individual object and action classes relate to each other and how a specific object or action is implemented and integrated in the infrastructure.",source:"@site/docs/environment/objectsactions.md",sourceDirName:"environment",slug:"/environment/objectsactions",permalink:"/ng-website/docs/environment/objectsactions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Implementing Novelties",permalink:"/ng-website/docs/environment/novelty"},next:{title:"Training Agents",permalink:"/ng-website/docs/category/training-agents"}},c={},l=[{value:"Objects",id:"objects",level:2},{value:"<code>OakLog</code>",id:"oaklog",level:3},{value:"<code>Chest</code>",id:"chest",level:3},{value:"<code>EntityTrade</code>",id:"entitytrade",level:3},{value:"Actions",id:"actions",level:2},{value:"Easy:",id:"easy",level:3},{value:"Medium:",id:"medium",level:3},{value:"Hard:",id:"hard",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"examples-of-objects--actions",children:"Examples of Objects & Actions"}),"\n",(0,i.jsxs)(t.p,{children:["The implementations of the objects and actions for the base environment are in the ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2",children:"NovelGridWorldsV2"})," repository, which you will have installed together with its wrapper repository ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGym",children:"NovelGym"}),". In this part of the tutorial, we explore how the individual object and action classes relate to each other and how a specific object or action is implemented and integrated in the infrastructure."]}),"\n",(0,i.jsx)(t.h2,{id:"objects",children:"Objects"}),"\n",(0,i.jsxs)(t.p,{children:["The base class for objects and entities is the ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2/blob/main/gym_novel_gridworlds2/object/object.py",children:"Object"})," class, the children of which are ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2/blob/main/gym_novel_gridworlds2/contrib/polycraft/objects/polycraft_obj.py",children:"PolycraftObject"})," and ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2/blob/main/gym_novel_gridworlds2/object/entity.py",children:"Entity"}),". See the diagram below for the full class interdependence."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Environment",src:o(2843).Z+"",width:"761",height:"169"})}),"\n",(0,i.jsxs)(t.p,{children:["The easiest way of implementing an entity that moves and has their own inventory where they can store objects is by declaring a child class of ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2/blob/main/gym_novel_gridworlds2/contrib/polycraft/objects/polycraft_entity.py",children:"PolycraftEntity"}),". To implement an object that may or may not be breakable, collectable, or placeable, declaring a child class of ",(0,i.jsx)(t.a,{href:"https://github.com/tufts-ai-robotics-group/NovelGridWorldsV2/blob/main/gym_novel_gridworlds2/contrib/polycraft/objects/polycraft_obj.py",children:"PolycraftObject"})," is the way to go. We demonstrate the construction of one entity and two objects, one of which has an inventory itself. This is to showcase the flexibility of the infrastructure."]}),"\n",(0,i.jsx)(t.h3,{id:"oaklog",children:(0,i.jsx)(t.code,{children:"OakLog"})}),"\n",(0,i.jsx)(t.h3,{id:"chest",children:(0,i.jsx)(t.code,{children:"Chest"})}),"\n",(0,i.jsx)(t.h3,{id:"entitytrade",children:(0,i.jsx)(t.code,{children:"EntityTrade"})}),"\n",(0,i.jsx)(t.h2,{id:"actions",children:"Actions"}),"\n",(0,i.jsx)(t.h3,{id:"easy",children:"Easy:"}),"\n",(0,i.jsx)(t.h3,{id:"medium",children:"Medium:"}),"\n",(0,i.jsx)(t.h3,{id:"hard",children:"Hard:"})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2843:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/Objects.drawio-018a74b2ac2c3be69cb9524f577220dc.png"},1151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>r});var i=o(7294);const n={},s=i.createContext(n);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);